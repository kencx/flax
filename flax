#!/bin/bash

VERSION=0.0.3

EDITOR="nvim"
HUGO_DIR="$HOME/dev/blog"
CONTENT_DIR="$HUGO_DIR/content/"
FZF_CMD=(fzf -m --ansi --cycle --delimiter='/' "--with-nth=-3,-2,-1")

if ! which hugo >/dev/null; then
    echo "Hugo must be installed!"
    exit 1
fi

if [[ ! -f "$HUGO_DIR/config.toml" ]]; then
    echo "Not a Hugo directory!"
    exit 1
fi

function help() {
    cat <<EOF
usage: flax [subcommand] [args]

  Subcommand:
    help         Returns help
    version      Return version
    ls [drafts]  List notes
    new [path]   Create new document
EOF
}

function list() {
    local dir="$CONTENT_DIR$1"
    local regex='s/^\.\/(.*)\.md$/\1/'

    case "$1" in
    "help" | "h")
        help
        exit 1
        ;;
    "draft" | "drafts" | "d")
        dir="$CONTENT_DIR$2"
        if [[ -d "$dir" ]]; then
            find "$dir" -name "*.md" -type f -exec grep -l "draft: true" {} \; | sed -r "$regex"
        else
            find "$CONTENT_DIR" -name "*.md" -type f -exec grep -l "draft: true" {} \; | sed -r "$regex"
        fi
        exit 0
        ;;
    *)
        if [[ -d "$dir" ]]; then
            find "$dir" -name "*.md" -type f | sed -r "$regex"
        else
            find "$CONTENT_DIR" -name "*.md" -type f | sed -r "$regex"
        fi
        ;;
    esac

}

function create() {
    if [[ $# -lt 1 ]]; then
        help
        exit 1
    fi

    cd "$HUGO_DIR" && hugo new "$1.md" >/dev/null 2>&1
    $EDITOR "$CONTENT_DIR/$1.md"
    exit 0
}

subcommand="$1"
shift

case "${subcommand}" in
"version" | "-v" | "--version")
    echo "v${VERSION}"
    ;;
"ls")
    SELECTED="$(list "$@" | "${FZF_CMD[@]}")"
    if [[ -n $SELECTED ]]; then
        # allow SELECTED to be split
        $EDITOR $SELECTED
    fi
    ;;
"new")
    create "$@"
    ;;
*)
    help
    ;;
esac
